class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        
        int n = obstacleGrid.length;
        int m = obstacleGrid[0].length;
        int[][] dp = new int[n+1][m+1];
        boolean flag = false;
    
        for (int i=0; i<m; i++){
            if(flag || obstacleGrid[0][i] == 1){
                flag = true;
                dp[0][i] = 0;
            }else{
                dp[0][i] = 1;
            }        
        }
        
        boolean f = false;
        for(int j=0; j<n; j++){
            if(f || obstacleGrid[j][0] == 1){
                f = true;
                dp[j][0] = 0;
            }else{
                dp[j][0] = 1;
            }
        }
        
        for(int i=1; i<n; i++){
            for(int j=1; j<m; j++){
                if(obstacleGrid[i][j] == 1){
                    dp[i][j] = 0;
                }else{
                    dp[i][j] = dp[i-1][j] + dp[i][j-1];
                }
            }
        }
        return dp[n-1][m-1];
    }
}
